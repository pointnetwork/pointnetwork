# This workflow will package the application

name: Create release

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i -g npm
    - run: npm install

    - name: Run build
      run: npm run build
    - name: Create sqlite binaries
      run: ./scripts/build-sqlite3-for-all-platforms.sh
    - name: Create package
      run: npm run pkg

    - name: Get the Source Tag
      id: get_source_tag
      run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_source_tag.outputs.SOURCE_TAG }}
        release_name: Release ${{ steps.get_source_tag.outputs.SOURCE_TAG }}
        draft: false
        prerelease: true

    - name: upload macos executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/pointnetwork-macos
        asset_name: pointnetwork-macos
        asset_content_type: application/octet-stream

    - name: Compress pkg
      run: ./scripts/package-executables.sh

    - name: upload linux artefact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/point-linux.tar.gz
        asset_name: point-linux-${{ steps.get_source_tag.outputs.SOURCE_TAG }}.tar.gz
        asset_content_type: application/gzip
    - name: upload windows artefact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/point-win.tar.gz
        asset_name: point-win-${{ steps.get_source_tag.outputs.SOURCE_TAG }}.tar.gz
        asset_content_type: application/gzip

    - name: upload macos artefact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/point-macos.tar.gz
        asset_name: point-macos-${{ steps.get_source_tag.outputs.SOURCE_TAG }}.tar.gz
        asset_content_type: application/gzip
