{
  "contractName": "KittyCore",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "kittyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "momId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dadId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "Birth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CREATION_LIMIT_GEN0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_momId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dadId",
          "type": "uint256"
        }
      ],
      "name": "breed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_genes",
          "type": "uint256"
        }
      ],
      "name": "createGen0Kitty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gen0Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "getChildren",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "getKitty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "genes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "birthTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dadId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "momId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "generation",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"kittyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"momId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dadId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"}],\"name\":\"Birth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"CREATION_LIMIT_GEN0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_momId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dadId\",\"type\":\"uint256\"}],\"name\":\"breed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_genes\",\"type\":\"uint256\"}],\"name\":\"createGen0Kitty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gen0Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"getChildren\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"getKitty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"birthTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dadId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"momId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"generation\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Erno Wever\",\"details\":\"This contract is split in the following way:     - KittyBase: This is where we define the most fundamental code shared throughout the core            functionality. This includes our main data storage, constants and data types, plus            internal functions for managing these items.     - KittyOwnership: This provides the methods required for basic non-fungible token     - KittyBreeding: This file contains the methods necessary to breed cats together     - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"[ERC721] The zero address indicates there is no approved address Requires - msg.sender is owner or approved opperator - cannot approve owner\",\"params\":{\"_kittyId\":\"The kitty id that is approved for\",\"_to\":\"The address.\"}},\"balanceOf(address)\":{\"details\":\"[ERC721] Kitties assigned to the zero address are considered invalid, and this function throws for queries about the zero address\",\"params\":{\"_owner\":\"The address to check\"},\"return\":\"The address of the owner of the kitty\"},\"breed(uint256,uint256)\":{\"params\":{\"_dadId\":\"the id of the dad\",\"_momId\":\"the id of the mom\"}},\"createGen0Kitty(uint256)\":{\"details\":\"Can only be called by owner and when limit has not be reached\",\"return\":\"The id of the created kitty\"},\"getApproved(uint256)\":{\"details\":\"[ERC721] Get the approval address of the kitty Requires - _kittyId must exist\",\"params\":{\"_kittyId\":\"The kitty id\"},\"return\":\"The approved address for this kitty, or the zero address if there is none\"},\"getChildren(uint256)\":{\"params\":{\"_kittyId\":\"the id of the mom\"},\"return\":\"array of ids of the children\"},\"getKitty(uint256)\":{\"params\":{\"_kittyId\":\"the id of the kitty to get information from\"}},\"isApprovedForAll(address,address)\":{\"details\":\"[ERC721]\",\"params\":{\"_operator\":\"The operator\",\"_owner\":\"The owner\"},\"return\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"[ERC721] Kitties assigned to the zero address are considered invalid, and this function throws for queries about the zero address\",\"return\":\"the address of the onwer of _kittyId\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"[ERC721] Transfer implementation with a check on caller if it can accept ERC721 Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator - when the caller is a smart contract, it should accept ERC721 tokens\",\"params\":{\"_from\":\"current owner of the kitty\",\"_kittyId\":\"uint256 id of the kitty to be transferred\",\"_to\":\"address to receive the ownership of the given kitty id\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"[ERC721] This works identically to the other function with an extra data parameter except this function just sets data to \\\"\\\"\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"_from\":\"current owner of the kitty\",\"_kittyId\":\"The id of the kitty to be transferred\",\"_to\":\"address to receive the ownership of the given kitty id\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"[ERC721] Emits the ApprovalForAll event. Requires - cannot approve self\",\"params\":{\"_approved\":\"The approval status\",\"_operator\":\"The kitty id\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"return\":\"true if the contract implements _interfaceId and _interfaceId is not 0xffffffff, false otherwise\"},\"tokenByIndex(uint256)\":{\"details\":\"[ERC721Enumerable] Requires: - _index < totalSupply()\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"return\":\"_index which is the same as the identifier\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.Be aware when calling this contract as its quite expensive because it loops through all kitties. Could potentially be optimized if we save all kitties also in an mapping of owners.\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"_owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokensOfOwner(address)\":{\"details\":\"[ERC721Enumerable] Requires - _index < balanceOf(_owner) - _owner is  non-zero addressBe aware when calling this contract as its quite expensive because it loops through all kitties\",\"params\":{\"_owner\":\"An address where we are interested in kitties owned by them\"},\"return\":\"The token identifier for the `_index`th kitty assigned to `_owner`,  (sort order not specified)\"},\"totalSupply()\":{\"details\":\"[ERC721Enumerable]\",\"return\":\"A count of valid kitties tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address\"},\"transfer(address,uint256)\":{\"params\":{\"_kittyId\":\"id of the kitty to be transferred\",\"_to\":\"address to receive the ownership of the given kitty id\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"[ERC721] Transfers the ownership of a given token id to another address Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the kitty\",\"_kittyId\":\"id of the kitty to be transferred\",\"_to\":\"address to receive the ownership of the given kitty id\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"The KittyCore contract.\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an kitty\"},\"balanceOf(address)\":{\"notice\":\"Count all Kitties assigned to an owner\"},\"breed(uint256,uint256)\":{\"notice\":\"Breed a new kitty based on a mom and dad\"},\"createGen0Kitty(uint256)\":{\"notice\":\"Creates a new gen0 kitty\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single kitty\"},\"getChildren(uint256)\":{\"notice\":\"Get all the children of a kittyId\"},\"getKitty(uint256)\":{\"notice\":\"Returns all the relevant information about a specific kitty\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an Kitty\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an Kitty from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an Kitty from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid kitties\"},\"tokensOfOwner(address)\":{\"notice\":\"Returns a list of all Kitty IDs assigned to an address.\"},\"totalSupply()\":{\"notice\":\"Count kitties tracked by this contract\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the ownership of an own Kitty to another address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of a Kitty -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING KITTIES OR ELSE THEY MAY BE PERMANENTLY LOST\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/KittyCore.sol\":\"KittyCore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/KittyBase.sol\":{\"keccak256\":\"0x79483de302de07d94da59180f4b2d6a46e570d28be52899a8e769d93a014ef32\",\"urls\":[\"bzz-raw://350da31e89c77108b226cb45420bd1099a16854a471e7718f29523ec6721ba30\",\"dweb:/ipfs/Qmd9LyvLVBE9vp5PwMUFNgHqfVrkRxnPzP8bmwsBwJtACg\"]},\"project:/contracts/KittyBreeding.sol\":{\"keccak256\":\"0x2179964b871dfcf0c0e6de37e6341d8012a0941c09e5f44d142dd2f2df5d2405\",\"urls\":[\"bzz-raw://4c9b9a061a87403d062c874534540591936500c9dd3e0fa81beb94acf2c2bb57\",\"dweb:/ipfs/QmUVarZNW8H9DgyHdQuDEbxCvEEazqg98XQKD1iUDJedjd\"]},\"project:/contracts/KittyCore.sol\":{\"keccak256\":\"0x22115c850d7b9ebd88731e466e71e0d2640f5fc8879f31ca1b4177cf27a685f7\",\"urls\":[\"bzz-raw://5f50da90c61869ab3ce2dd9a4ad8170f9ea2f3a3cc316f941647fdbef0af8e23\",\"dweb:/ipfs/QmRrQGPFWnWK6WAmGBAkYBiRZcHiBkhTTyKCJCkE4nMenp\"]},\"project:/contracts/KittyMinting.sol\":{\"keccak256\":\"0x6f57c5ce47e4a04128f47ca3eb131c82d8adbbf93f9386f6ca5d2ca3a3bc7ca8\",\"urls\":[\"bzz-raw://e5dff8c0409101d6c164c51665283f1d0159096556b99f07e05023544fda6403\",\"dweb:/ipfs/QmSrD8BvDpPZaBAaBoCEVHrp3tR7o8qkTzdjHXDfpDMugk\"]},\"project:/contracts/KittyOwnership.sol\":{\"keccak256\":\"0x61a4c8311ddced37338c5e6b46053fefb04eb268302b0267a3a94dabda06afe1\",\"urls\":[\"bzz-raw://7e32f520e002a03cce0e7b2ed8086e8101fdb033a69e17c869c248e624e90ab9\",\"dweb:/ipfs/Qmam1hqsSGwuchV5fSHoGtjKJvPp93mBJu5qnJtPfZfDEr\"]},\"project:/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xe54f31fd26ed6ceca6e11d8779557e56811d3dde2aa1b8e52a48a2fbfeca7187\",\"urls\":[\"bzz-raw://8fa1c142bf78179d084f8d3a4f2dfe396ae489af77acf14a7db6faa97561f32b\",\"dweb:/ipfs/QmPFNcASpUxkBFQ7xTdkA44DNqZihmcf3QiRf7hXm9Zupr\"]},\"project:/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x4e9fe8e4e3c9cc5092ccdaee7a68117b817f89281540b91585d1f03a3c45bb7e\",\"urls\":[\"bzz-raw://e00d8b20a4fb8ba1d9585883a2b7470bf56b8eb5e0c857379710ba6c258f6258\",\"dweb:/ipfs/QmeUjuzy59Fgk3162quG1nG4tjF2HzcwiC1n6kaLhYJbgW\"]},\"project:/contracts/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0x0511fb3c896ea76306615158bd130dbba5ba84b0c5ada0486fa2cd2a6ac7328c\",\"urls\":[\"bzz-raw://8b714c253e97fed026b5c1ec728b3f47156bfd91c2f048f968aa91c652ee8f34\",\"dweb:/ipfs/QmUXspdxvcdghKNX4UccnDti4CNP8iW1ZerkLYdfmBemDn\"]},\"project:/contracts/utils/Ownable.sol\":{\"keccak256\":\"0xcf906bc89e8cfe6765436883803f03908a874e24e39ac6f4d5da68e329e14ae6\",\"urls\":[\"bzz-raw://52cdc51f410e4727e1346c0604568a2aee7bfa79b51ff81aa4f80d9f75a2dd5a\",\"dweb:/ipfs/QmXSf9xvKZzdY5oQ9HLb1MARJoPcwAtef21w27ot95FCEF\"]},\"project:/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x703948e825762bb55bbff9168837febaabca2d200abf8ee76f194e8b3f045a49\",\"urls\":[\"bzz-raw://f5d43d79bfc0c7ce1c56060f60b450bd69b957bf46c5822f968c292d2b1d9994\",\"dweb:/ipfs/Qmc48jQK4mxQVHAt7ia2fmquiFArUnoYBgPpbEKc7XUqFy\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3612e4b806100ae6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063715018a6116100f9578063b30387a411610097578063d9ecad7b11610071578063d9ecad7b146109ec578063e985e9c514610a38578063e98b7f4d14610ab4578063f2fde38b14610b12576101a9565b8063b30387a4146108ab578063b4834330146108c9578063b88d4fde146108e7576101a9565b80638f32d59b116100d35780638f32d59b1461076857806395d89b411461078a578063a22cb4651461080d578063a9059cbb1461085d576101a9565b8063715018a61461067b5780638462151c146106855780638da5cb5b1461071e576101a9565b80632f745c59116101665780634bdb8ab5116101405780634bdb8ab5146105315780634f6ccce7146105735780636352211e146105b557806370a0823114610623576101a9565b80632f745c59146103de57806342842e0e1461044057806349ae8dc3146104ae576101a9565b806301ffc9a7146101ae57806306fdde0314610213578063081812fc14610296578063095ea7b31461030457806318160ddd1461035257806323b872dd14610370575b600080fd5b6101f9600480360360208110156101c457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b56565b604051808215151515815260200191505060405180910390f35b61021b610bf6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025b578082015181840152602081019050610240565b50505050905090810190601f1680156102885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c2600480360360208110156102ac57600080fd5b8101908080359060200190929190505050610c2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103506004803603604081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cca565b005b61035a610e8a565b6040518082815260200191505060405180910390f35b6103dc6004803603606081101561038657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e97565b005b61042a600480360360408110156103f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f9e565b6040518082815260200191505060405180910390f35b6104ac6004803603606081101561045657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611041565b005b6104da600480360360208110156104c457600080fd5b8101908080359060200190929190505050611061565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561051d578082015181840152602081019050610502565b505050509050019250505060405180910390f35b61055d6004803603602081101561054757600080fd5b81019080803590602001909291905050506110d1565b6040518082815260200191505060405180910390f35b61059f6004803603602081101561058957600080fd5b81019080803590602001909291905050506111f7565b6040518082815260200191505060405180910390f35b6105e1600480360360208110156105cb57600080fd5b810190808035906020019092919050505061127d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106656004803603602081101561063957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611345565b6040518082815260200191505060405180910390f35b610683611413565b005b6106c76004803603602081101561069b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061154c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561070a5780820151818401526020810190506106ef565b505050509050019250505060405180910390f35b610726611736565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61077061175f565b604051808215151515815260200191505060405180910390f35b6107926117b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107d25780820151818401526020810190506107b7565b50505050905090810190601f1680156107ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61085b6004803603604081101561082357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506117ef565b005b6108a96004803603604081101561087357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611992565b005b6108b36119a1565b6040518082815260200191505060405180910390f35b6108d16119a7565b6040518082815260200191505060405180910390f35b6109ea600480360360808110156108fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561096457600080fd5b82018360208201111561097657600080fd5b8035906020019184600183028401116401000000008311171561099857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506119ac565b005b610a2260048036036040811015610a0257600080fd5b810190808035906020019092919080359060200190929190505050611ab5565b6040518082815260200191505060405180910390f35b610a9a60048036036040811015610a4e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5f565b604051808215151515815260200191505060405180910390f35b610ae060048036036020811015610aca57600080fd5b8101908080359060200190929190505050611df3565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b610b5460048036036020811015610b2857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea2565b005b60006380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610bef57506301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060400160405280600d81526020017f43727970746f4b6974746965730000000000000000000000000000000000000081525081565b6000610c3a82611f28565b610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612d396024913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610cd58261127d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f617070726f76616c20746f2063757272656e74206f776e65720000000000000081525060200191505060405180910390fd5b610d833383611f9a565b610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d7e6030913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600180549050905090565b610ea081611f28565b610f12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b610f1c3382611fdb565b610f8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b610f99838383612070565b505050565b6000610fa983611345565b821061101d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b6110268361154c565b828151811061103157fe5b6020026020010151905092915050565b61105c838383604051806020016040528060008152506119ac565b505050565b606080600560008481526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156110c157602002820191906000526020600020905b8154815260200190600101908083116110ad575b5050505050905080915050919050565b60006110db61175f565b61114d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6064600754106111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4c696d69742067656e302072656163686564000000000000000000000000000081525060200191505060405180910390fd5b6111db600160075461239590919063ffffffff16565b6007819055506111f06000806000853361241d565b9050919050565b6000611201610e8a565b8210611275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b819050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561133c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d5d6021913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612df56022913960400191505060405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61141b61175f565b61148d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e20717565727920666f7220746865207a65726f206164647265737381525060200191505060405180910390fd5b60006115fc83611345565b905060008114156116405760006040519080825280602002602001820160405280156116375781602001602082028038833980820191505090505b50915050611731565b6060816040519080825280602002602001820160405280156116715781602001602082028038833980820191505090505b509050600061167e610e8a565b9050600080905060008090505b828111611728578673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561171b578084838151811061170657fe5b60200260200101818152505081806001019250505b808060010191505061168b565b83955050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600381526020017f434154000000000000000000000000000000000000000000000000000000000081525081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611891576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f617070726f76616c20746f2063616c6c6572000000000000000000000000000081525060200191505060405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61199d338383611041565b5050565b60075481565b606481565b6119b582611f28565b611a27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b611a313383611fdb565b611aa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b611aaf848484846125f7565b50505050565b6000611ac13384611f9a565b611b33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e206b697474790000000000000000000000000000000000000081525060200191505060405180910390fd5b611b3d3383611f9a565b611baf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e206b697474790000000000000000000000000000000000000081525060200191505060405180910390fd5b81831415611c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4c657473206e6f7420646f20746869730000000000000000000000000000000081525060200191505060405180910390fd5b600060018481548110611c3457fe5b90600052602060002090600202019050600060018481548110611c5357fe5b906000526020600020906002020190506000611c7783600001548360000154612686565b90506000611cc46001611cb68660010160109054906101000a900461ffff1661ffff168660010160109054906101000a900461ffff1661ffff166127e6565b61239590919063ffffffff16565b90506000611cd5888884863361241d565b90506005600088815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555060056000898152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550809550505050505092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060008060008060018781548110611e0957fe5b906000526020600020906002020190508060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16945080600101600c9054906101000a900463ffffffff1663ffffffff1693508060010160089054906101000a900463ffffffff1663ffffffff1692508060010160109054906101000a900461ffff1661ffff169150806000015495505091939590929450565b611eaa61175f565b611f1c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611f2581612800565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16611fbc8361127d565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600080611fe78361127d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061205657508373ffffffffffffffffffffffffffffffffffffffff1661203e84610c2f565b73ffffffffffffffffffffffffffffffffffffffff16145b8061206757506120668185611d5f565b5b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561214c57600080fd5b61219f6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461239590919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612335576122bb6001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294490919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080828401905083811015612413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612427612ccc565b6040518060a001604052808581526020014267ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff1681526020018661ffff168152509050600061255860018084908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600101600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160106101000a81548161ffff021916908361ffff160217905550505061294490919063ffffffff16565b90507f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad584828a8a89604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a16125e960008583612070565b809250505095945050505050565b612602848484612070565b61260e8484848461298e565b612680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e7366657220746f206e6f6e204552433732315265636569766572000081525060200191505060405180910390fd5b50505050565b6000612690612d15565b600061269a612b61565b90506000600790506000600190505b6080811161273b576000818460ff1616146126e957606487816126c857fe5b0660ff16848360ff16600881106126db57fe5b602002018181525050612710565b606486816126f357fe5b0660ff16848360ff166008811061270657fe5b6020020181815250505b6064878161271a57fe5b0496506064868161272757fe5b0495506001820391506002810290506126a9565b50600060078360ff168161274b57fe5b06905060638360ff168161275b57fe5b0660ff16848260ff166008811061276e57fe5b602002018181525050600080600090505b60088110156127d7576127ab86826008811061279757fe5b60200201518361239590919063ffffffff16565b9150600781146127cc576127c9606483612b7390919063ffffffff16565b91505b60018101905061277f565b50809550505050505092915050565b6000818310156127f657816127f8565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612886576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612dae6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061298683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bf9565b905092915050565b600061299984612cb9565b6129a65760019050612b59565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612a81578082015181840152602081019050612a66565b50505050905090810190601f168015612aae5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612ad057600080fd5b505af1158015612ae4573d6000803e3d6000fd5b505050506040513d6020811015612afa57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060ff4281612b6d57fe5b06905090565b600080831415612b865760009050612bf3565b6000828402905082848281612b9757fe5b0414612bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612dd46021913960400191505060405180910390fd5b809150505b92915050565b6000838311158290612ca6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6b578082015181840152602081019050612c50565b50505050905090810190601f168015612c985780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080823b905060008111915050919050565b6040518060a0016040528060008152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff1681525090565b60405180610100016040528060089060208202803883398082019150509050509056fe617070726f76656420717565727920666f72206e6f6e6578697374656e74206b697474794f776e657220717565727920666f72206e6f6e6578697374656e74206b69747479617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742616c616e636520717565727920666f7220746865207a65726f2061646472657373a265627a7a72315820b255d0632439ff680baa2c04112285e0098280fec6f30447e5204f24c428553264736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c8063715018a6116100f9578063b30387a411610097578063d9ecad7b11610071578063d9ecad7b146109ec578063e985e9c514610a38578063e98b7f4d14610ab4578063f2fde38b14610b12576101a9565b8063b30387a4146108ab578063b4834330146108c9578063b88d4fde146108e7576101a9565b80638f32d59b116100d35780638f32d59b1461076857806395d89b411461078a578063a22cb4651461080d578063a9059cbb1461085d576101a9565b8063715018a61461067b5780638462151c146106855780638da5cb5b1461071e576101a9565b80632f745c59116101665780634bdb8ab5116101405780634bdb8ab5146105315780634f6ccce7146105735780636352211e146105b557806370a0823114610623576101a9565b80632f745c59146103de57806342842e0e1461044057806349ae8dc3146104ae576101a9565b806301ffc9a7146101ae57806306fdde0314610213578063081812fc14610296578063095ea7b31461030457806318160ddd1461035257806323b872dd14610370575b600080fd5b6101f9600480360360208110156101c457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b56565b604051808215151515815260200191505060405180910390f35b61021b610bf6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025b578082015181840152602081019050610240565b50505050905090810190601f1680156102885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c2600480360360208110156102ac57600080fd5b8101908080359060200190929190505050610c2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103506004803603604081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cca565b005b61035a610e8a565b6040518082815260200191505060405180910390f35b6103dc6004803603606081101561038657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e97565b005b61042a600480360360408110156103f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f9e565b6040518082815260200191505060405180910390f35b6104ac6004803603606081101561045657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611041565b005b6104da600480360360208110156104c457600080fd5b8101908080359060200190929190505050611061565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561051d578082015181840152602081019050610502565b505050509050019250505060405180910390f35b61055d6004803603602081101561054757600080fd5b81019080803590602001909291905050506110d1565b6040518082815260200191505060405180910390f35b61059f6004803603602081101561058957600080fd5b81019080803590602001909291905050506111f7565b6040518082815260200191505060405180910390f35b6105e1600480360360208110156105cb57600080fd5b810190808035906020019092919050505061127d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106656004803603602081101561063957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611345565b6040518082815260200191505060405180910390f35b610683611413565b005b6106c76004803603602081101561069b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061154c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561070a5780820151818401526020810190506106ef565b505050509050019250505060405180910390f35b610726611736565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61077061175f565b604051808215151515815260200191505060405180910390f35b6107926117b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107d25780820151818401526020810190506107b7565b50505050905090810190601f1680156107ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61085b6004803603604081101561082357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506117ef565b005b6108a96004803603604081101561087357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611992565b005b6108b36119a1565b6040518082815260200191505060405180910390f35b6108d16119a7565b6040518082815260200191505060405180910390f35b6109ea600480360360808110156108fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561096457600080fd5b82018360208201111561097657600080fd5b8035906020019184600183028401116401000000008311171561099857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506119ac565b005b610a2260048036036040811015610a0257600080fd5b810190808035906020019092919080359060200190929190505050611ab5565b6040518082815260200191505060405180910390f35b610a9a60048036036040811015610a4e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5f565b604051808215151515815260200191505060405180910390f35b610ae060048036036020811015610aca57600080fd5b8101908080359060200190929190505050611df3565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b610b5460048036036020811015610b2857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea2565b005b60006380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610bef57506301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060400160405280600d81526020017f43727970746f4b6974746965730000000000000000000000000000000000000081525081565b6000610c3a82611f28565b610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612d396024913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610cd58261127d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f617070726f76616c20746f2063757272656e74206f776e65720000000000000081525060200191505060405180910390fd5b610d833383611f9a565b610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612d7e6030913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600180549050905090565b610ea081611f28565b610f12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b610f1c3382611fdb565b610f8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b610f99838383612070565b505050565b6000610fa983611345565b821061101d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b6110268361154c565b828151811061103157fe5b6020026020010151905092915050565b61105c838383604051806020016040528060008152506119ac565b505050565b606080600560008481526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156110c157602002820191906000526020600020905b8154815260200190600101908083116110ad575b5050505050905080915050919050565b60006110db61175f565b61114d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6064600754106111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4c696d69742067656e302072656163686564000000000000000000000000000081525060200191505060405180910390fd5b6111db600160075461239590919063ffffffff16565b6007819055506111f06000806000853361241d565b9050919050565b6000611201610e8a565b8210611275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f696e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b819050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561133c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d5d6021913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612df56022913960400191505060405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61141b61175f565b61148d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e20717565727920666f7220746865207a65726f206164647265737381525060200191505060405180910390fd5b60006115fc83611345565b905060008114156116405760006040519080825280602002602001820160405280156116375781602001602082028038833980820191505090505b50915050611731565b6060816040519080825280602002602001820160405280156116715781602001602082028038833980820191505090505b509050600061167e610e8a565b9050600080905060008090505b828111611728578673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561171b578084838151811061170657fe5b60200260200101818152505081806001019250505b808060010191505061168b565b83955050505050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6040518060400160405280600381526020017f434154000000000000000000000000000000000000000000000000000000000081525081565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611891576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f617070726f76616c20746f2063616c6c6572000000000000000000000000000081525060200191505060405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61199d338383611041565b5050565b60075481565b606481565b6119b582611f28565b611a27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000081525060200191505060405180910390fd5b611a313383611fdb565b611aa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420617574686f72697a656400000000000000000000000000000000000081525060200191505060405180910390fd5b611aaf848484846125f7565b50505050565b6000611ac13384611f9a565b611b33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e206b697474790000000000000000000000000000000000000081525060200191505060405180910390fd5b611b3d3383611f9a565b611baf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4e6f74206f776e206b697474790000000000000000000000000000000000000081525060200191505060405180910390fd5b81831415611c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4c657473206e6f7420646f20746869730000000000000000000000000000000081525060200191505060405180910390fd5b600060018481548110611c3457fe5b90600052602060002090600202019050600060018481548110611c5357fe5b906000526020600020906002020190506000611c7783600001548360000154612686565b90506000611cc46001611cb68660010160109054906101000a900461ffff1661ffff168660010160109054906101000a900461ffff1661ffff166127e6565b61239590919063ffffffff16565b90506000611cd5888884863361241d565b90506005600088815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555060056000898152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550809550505050505092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060008060008060018781548110611e0957fe5b906000526020600020906002020190508060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16945080600101600c9054906101000a900463ffffffff1663ffffffff1693508060010160089054906101000a900463ffffffff1663ffffffff1692508060010160109054906101000a900461ffff1661ffff169150806000015495505091939590929450565b611eaa61175f565b611f1c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611f2581612800565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16611fbc8361127d565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600080611fe78361127d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061205657508373ffffffffffffffffffffffffffffffffffffffff1661203e84610c2f565b73ffffffffffffffffffffffffffffffffffffffff16145b8061206757506120668185611d5f565b5b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f7472616e7366657220746f20746865207a65726f20616464726573730000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561214c57600080fd5b61219f6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461239590919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612335576122bb6001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294490919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080828401905083811015612413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612427612ccc565b6040518060a001604052808581526020014267ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff1681526020018661ffff168152509050600061255860018084908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600101600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160106101000a81548161ffff021916908361ffff160217905550505061294490919063ffffffff16565b90507f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad584828a8a89604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a16125e960008583612070565b809250505095945050505050565b612602848484612070565b61260e8484848461298e565b612680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7472616e7366657220746f206e6f6e204552433732315265636569766572000081525060200191505060405180910390fd5b50505050565b6000612690612d15565b600061269a612b61565b90506000600790506000600190505b6080811161273b576000818460ff1616146126e957606487816126c857fe5b0660ff16848360ff16600881106126db57fe5b602002018181525050612710565b606486816126f357fe5b0660ff16848360ff166008811061270657fe5b6020020181815250505b6064878161271a57fe5b0496506064868161272757fe5b0495506001820391506002810290506126a9565b50600060078360ff168161274b57fe5b06905060638360ff168161275b57fe5b0660ff16848260ff166008811061276e57fe5b602002018181525050600080600090505b60088110156127d7576127ab86826008811061279757fe5b60200201518361239590919063ffffffff16565b9150600781146127cc576127c9606483612b7390919063ffffffff16565b91505b60018101905061277f565b50809550505050505092915050565b6000818310156127f657816127f8565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612886576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612dae6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061298683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bf9565b905092915050565b600061299984612cb9565b6129a65760019050612b59565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612a81578082015181840152602081019050612a66565b50505050905090810190601f168015612aae5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612ad057600080fd5b505af1158015612ae4573d6000803e3d6000fd5b505050506040513d6020811015612afa57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060ff4281612b6d57fe5b06905090565b600080831415612b865760009050612bf3565b6000828402905082848281612b9757fe5b0414612bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612dd46021913960400191505060405180910390fd5b809150505b92915050565b6000838311158290612ca6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6b578082015181840152602081019050612c50565b50505050905090810190601f168015612c985780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080823b905060008111915050919050565b6040518060a0016040528060008152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff1681525090565b60405180610100016040528060089060208202803883398082019150509050509056fe617070726f76656420717565727920666f72206e6f6e6578697374656e74206b697474794f776e657220717565727920666f72206e6f6e6578697374656e74206b69747479617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742616c616e636520717565727920666f7220746865207a65726f2061646472657373a265627a7a72315820b255d0632439ff680baa2c04112285e0098280fec6f30447e5204f24c428553264736f6c63430005100032",
  "sourceMap": "710:697:2:-;;;667:10:10;658:6;;:19;;;;;;;;;;;;;;;;;;725:10;692:44;;721:1;692:44;;;;;;;;;;;;710:697:2;;;;;;",
  "deployedSourceMap": "710:697:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;710:697:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:219:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1287:219:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;354:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;354:45:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10997:198;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10997:198:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9710:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9710:390:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11923:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8731:283;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8731:283:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14314:240;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14314:240:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7045:168;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7045:168:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2612:167:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2612:167:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2612:167:1;;;;;;;;;;;;;;;;;604:255:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;604:255:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12272:164:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12272:164:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2284:221;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2284:221:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1826:193;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1826:193:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1602:137:10;;;:::i;:::-;;12966:765:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12966:765:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12966:765:4;;;;;;;;;;;;;;;;;819:77:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1170:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;405:37:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;405:37:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10420:267;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10420:267:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9240:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9240:118:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;400:24:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;273:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7719:326:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7719:326:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7719:326:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7719:326:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7719:326:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7719:326:4;;;;;;;;;;;;;;;:::i;:::-;;1718:738:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1718:738:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11476:177:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11476:177:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;909:496:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;909:496:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1888:107:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;1287:219:4;1382:4;824:10;1426:20;;1410:36;;;:12;:36;;;;:88;;;;887:10;1478:20;;1462:36;;;:12;:36;;;;1410:88;1402:97;;1287:219;;;:::o;354:45::-;;;;;;;;;;;;;;;;;;;:::o;10997:198::-;11057:7;11084:17;11092:8;11084:7;:17::i;:::-;11076:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11160:18;:28;11179:8;11160:28;;;;;;;;;;;;;;;;;;;;;11153:35;;10997:198;;;:::o;9710:390::-;9775:14;9792:17;9800:8;9792:7;:17::i;:::-;9775:34;;9834:6;9827:13;;:3;:13;;;;9819:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9901:27;9907:10;9919:8;9901:5;:27::i;:::-;9880:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10044:3;10013:18;:28;10032:8;10013:28;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;10084:8;10079:3;10062:31;;10071:6;10062:31;;;;;;;;;;;;9710:390;;;:::o;11923:92::-;11967:7;11993:8;:15;;;;11986:22;;11923:92;:::o;8731:283::-;8854:17;8862:8;8854:7;:17::i;:::-;8846:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8911:35;8925:10;8937:8;8911:13;:35::i;:::-;8903:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8976:31;8986:5;8993:3;8998:8;8976:9;:31::i;:::-;8731:283;;;:::o;14314:240::-;14420:7;14460:17;14470:6;14460:9;:17::i;:::-;14451:6;:26;14443:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14518:21;14532:6;14518:13;:21::i;:::-;14540:6;14518:29;;;;;;;;;;;;;;14511:36;;14314:240;;;;:::o;7045:168::-;7164:42;7181:5;7188:3;7193:8;7164:42;;;;;;;;;;;;:16;:42::i;:::-;7045:168;;;:::o;2612:167:1:-;2669:16;2695:25;2723:16;:26;2740:8;2723:26;;;;;;;;;;;2695:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2764:8;2757:15;;;2612:167;;;:::o;604:255:3:-;673:7;1023:9:10;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:3:3;700:9;;:31;692:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:16;791:1;777:9;;:13;;:16;;;;:::i;:::-;765:9;:28;;;;811:41;824:1;827;830;833:6;841:10;811:12;:41::i;:::-;804:48;;604:255;;;:::o;12272:164:4:-;12333:7;12369:13;:11;:13::i;:::-;12360:6;:22;12352:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12423:6;12416:13;;12272:164;;;:::o;2284:221::-;2340:7;2359:13;2375:15;:25;2391:8;2375:25;;;;;;;;;;;;;;;;;;;;;2359:41;;2435:1;2418:19;;:5;:19;;;;2410:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:5;2486:12;;;2284:221;;;:::o;1826:193::-;1882:7;1927:1;1909:20;;:6;:20;;;;1901:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1986:18;:26;2005:6;1986:26;;;;;;;;;;;;;;;;1979:33;;1826:193;;;:::o;1602:137:10:-;1023:9;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:1;1663:40;;1684:6;;;;;;;;;;;1663:40;;;;;;;;;;;;1730:1;1713:6;;:19;;;;;;;;;;;;;;;;;;1602:137::o;12966:765:4:-;13050:16;13108:1;13090:20;;:6;:20;;;;13082:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13158:18;13179:17;13189:6;13179:9;:17::i;:::-;13158:38;;13225:1;13211:10;:15;13207:106;;;13300:1;13286:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13286:16:4;;;;13279:23;;;;;13207:106;13323:23;13363:10;13349:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13349:25:4;;;;13323:51;;13384:20;13407:13;:11;:13::i;:::-;13384:36;;13430:19;13452:1;13430:23;;13464:15;13505:1;13495:11;;13490:211;13519:12;13508:7;:23;13490:211;;13590:6;13562:34;;:15;:24;13578:7;13562:24;;;;;;;;;;;;;;;;;;;;;:34;;;13558:133;;;13638:7;13616:6;13623:11;13616:19;;;;;;;;;;;;;:29;;;;;13663:13;;;;;;;13558:133;13533:9;;;;;;;13490:211;;;13718:6;13711:13;;;;;;;12966:765;;;;:::o;819:77:10:-;857:7;883:6;;;;;;;;;;;876:13;;819:77;:::o;1170:90::-;1210:4;1247:6;;;;;;;;;;;1233:20;;:10;:20;;;1226:27;;1170:90;:::o;405:37:4:-;;;;;;;;;;;;;;;;;;;:::o;10420:267::-;10520:10;10507:23;;:9;:23;;;;10499:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10608:9;10564:18;:30;10583:10;10564:30;;;;;;;;;;;;;;;:41;10595:9;10564:41;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10659:9;10632:48;;10647:10;10632:48;;;10670:9;10632:48;;;;;;;;;;;;;;;;;;;;;;10420:267;;:::o;9240:118::-;9308:43;9325:10;9337:3;9342:8;9308:16;:43::i;:::-;9240:118;;:::o;400:24:3:-;;;;:::o;273:49::-;319:3;273:49;:::o;7719:326:4:-;7874:17;7882:8;7874:7;:17::i;:::-;7866:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7931:35;7945:10;7957:8;7931:13;:35::i;:::-;7923:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7996:42;8010:5;8017:3;8022:8;8032:5;7996:13;:42::i;:::-;7719:326;;;;:::o;1718:738:1:-;1781:7;1806:25;1812:10;1824:6;1806:5;:25::i;:::-;1798:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:25;1871:10;1883:6;1865:5;:25::i;:::-;1857:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:6;1924;:16;;1916:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:17;1990:8;1999:6;1990:16;;;;;;;;;;;;;;;;;;1970:36;;2014:17;2034:8;2043:6;2034:16;;;;;;;;;;;;;;;;;;2014:36;;2065:15;2083:29;2091:3;:9;;;2102:3;:9;;;2083:7;:29::i;:::-;2065:47;;2120:19;2142:42;2182:1;2142:35;2146:3;:14;;;;;;;;;;;;2142:35;;2162:3;:14;;;;;;;;;;;;2142:35;;:3;:35::i;:::-;:39;;:42;;;;:::i;:::-;2120:64;;2193:18;2214:110;2236:6;2252;2268:11;2289:7;2306:10;2214:12;:110::i;:::-;2193:131;;2333:16;:24;2350:6;2333:24;;;;;;;;;;;2363:10;2333:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2333:41:1;;;;;;;;;;;;;;;;;;;;;;2382:16;:24;2399:6;2382:24;;;;;;;;;;;2412:10;2382:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2382:41:1;;;;;;;;;;;;;;;;;;;;;;2439:10;2432:17;;;;;;;1718:738;;;;:::o;11476:177:4:-;11582:4;11609:18;:26;11628:6;11609:26;;;;;;;;;;;;;;;:37;11636:9;11609:37;;;;;;;;;;;;;;;;;;;;;;;;;11602:44;;11476:177;;;;:::o;909:496:2:-;1003:13;1030:17;1061:13;1088;1115:18;1158:19;1180:8;1189;1180:18;;;;;;;;;;;;;;;;;;1158:40;;1229:5;:15;;;;;;;;;;;;1221:24;;1209:36;;1271:5;:11;;;;;;;;;;;;1263:20;;1255:28;;1309:5;:11;;;;;;;;;;;;1301:20;;1293:28;;1352:5;:16;;;;;;;;;;;;1344:25;;1331:38;;1387:5;:11;;;1379:19;;909:496;;;;;;;;:::o;1888:107:10:-;1023:9;:7;:9::i;:::-;1015:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:28;1979:8;1960:18;:28::i;:::-;1888:107;:::o;3165:158:4:-;3223:4;3239:13;3255:15;:25;3271:8;3255:25;;;;;;;;;;;;;;;;;;;;;3239:41;;3314:1;3297:19;;:5;:19;;;;3290:26;;;3165:158;;;:::o;2775:161::-;2873:4;2921:8;2900:29;;:17;2908:8;2900:7;:17::i;:::-;:29;;;2893:36;;2775:161;;;;:::o;4284:303::-;4390:4;4410:14;4427:17;4435:8;4427:7;:17::i;:::-;4410:34;;4474:6;4462:18;;:8;:18;;;:67;;;;4521:8;4496:33;;:21;4508:8;4496:11;:21::i;:::-;:33;;;4462:67;:117;;;;4545:34;4562:6;4570:8;4545:16;:34::i;:::-;4462:117;4454:126;;;4284:303;;;;:::o;3440:541:0:-;3577:1;3562:17;;:3;:17;;;;3554:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3645:4;3630:20;;:3;:20;;;;3622:29;;;;;;3688:30;3716:1;3688:18;:23;3707:3;3688:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;3662:18;:23;3681:3;3662:23;;;;;;;;;;;;;;;:56;;;;3756:3;3728:15;:25;3744:8;3728:25;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3791:1;3774:19;;:5;:19;;;3770:159;;3837:32;3867:1;3837:18;:25;3856:5;3837:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;3809:18;:25;3828:5;3809:25;;;;;;;;;;;;;;;:60;;;;3890:18;:28;3909:8;3890:28;;;;;;;;;;;;3883:35;;;;;;;;;;;3770:159;3965:8;3960:3;3944:30;;3953:5;3944:30;;;;;;;;;;;;3440:541;;;:::o;834:176:11:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;4448:631:0:-;4619:7;4638:19;;:::i;:::-;4660:207;;;;;;;;4687:6;4660:207;;;;4725:15;4660:207;;;;;;4769:6;4660:207;;;;;;4804:6;4660:207;;;;;;4844:11;4660:207;;;;;4638:229;;4878:18;4899:28;4925:1;4899:8;4913:6;4899:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4899:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;4878:49;;4943;4949:6;4957:10;4969:6;4977;4985;4943:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5003:41;5021:1;5025:6;5033:10;5003:9;:41::i;:::-;5062:10;5055:17;;;;4448:631;;;;;;;:::o;6038:322:4:-;6184:31;6194:5;6201:3;6206:8;6184:9;:31::i;:::-;6246:51;6269:5;6276:3;6281:8;6291:5;6246:22;:51::i;:::-;6225:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6038:322;;;;:::o;570:992:1:-;640:7;657:28;;:::i;:::-;693:13;709:12;:10;:12::i;:::-;693:28;;729:11;743:1;729:15;;801:9;813:1;801:13;;796:403;821:3;816:1;:8;796:403;;970:1;965;955:7;:11;;;:16;951:154;;1021:3;1013:5;:11;;;;;;987:38;;:10;998:5;987:17;;;;;;;;;;;;:38;;;;;951:154;;;1090:3;1082:5;:11;;;;;;1056:38;;:10;1067:5;1056:17;;;;;;;;;;;;:38;;;;;951:154;1131:3;1123:5;:11;;;;;;1115:19;;1160:3;1152:5;:11;;;;;;1144:19;;1189:1;1181:5;:9;1173:17;;834:1;830;:5;826:9;;796:403;;;;1257:18;1288:1;1278:7;:11;;;;;;;;1257:32;;1334:2;1324:7;:12;;;;;;;;1297:39;;:10;1308:12;1297:24;;;;;;;;;;;;:39;;;;;1345:15;1374:9;1386:1;1374:13;;1369:164;1393:1;1389;:5;1369:164;;;1427:26;1439:10;1450:1;1439:13;;;;;;;;;;;1427:7;:11;;:26;;;;:::i;:::-;1417:36;;1473:1;1468;:6;1464:61;;1498:16;1510:3;1498:7;:11;;:16;;;;:::i;:::-;1488:26;;1464:61;1404:1;1400;:5;1396:9;;1369:164;;;;1548:7;1541:14;;;;;;;570:992;;;;:::o;401:105::-;459:7;490:1;485;:6;;:14;;498:1;485:14;;;494:1;485:14;478:21;;401:105;;;;:::o;2096:225:10:-;2189:1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:8;2249:38;;2270:6;;;;;;;;;;;2249:38;;;;;;;;;;;;2306:8;2297:6;;:17;;;;;;;;;;;;;;;;;;2096:225;:::o;1274:134:11:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;5114:447:4:-;5268:4;5289:16;5301:3;5289:11;:16::i;:::-;5284:59;;5328:4;5321:11;;;;5284:59;5353:17;5389:3;5373:37;;;5424:10;5448:5;5467:8;5489:5;5373:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5373:131:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5373:131:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5373:131:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5373:131:4;;;;;;;;;;;;;;;;5353:151;;684:10;5537:16;;5523:30;;;:10;:30;;;;5515:39;;;5114:447;;;;;;;:::o;243:92:1:-;288:5;324:3;318;:9;;;;;;305:23;;243:92;:::o;2159:459:11:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;3704:230:4:-;3766:4;3782:12;3884:8;3872:21;3864:29;;3926:1;3919:4;:8;3912:15;;;3704:230;;;:::o;710:697:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;710:697:2;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"./KittyMinting.sol\";\n\n/**\n * @title The KittyCore contract.\n * @author Erno Wever\n * @dev This contract is split in the following way:\n *      - KittyBase: This is where we define the most fundamental code shared throughout the core\n *             functionality. This includes our main data storage, constants and data types, plus\n *             internal functions for managing these items.\n *      - KittyOwnership: This provides the methods required for basic non-fungible token\n *      - KittyBreeding: This file contains the methods necessary to breed cats together\n *      - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.\n */\ncontract KittyCore is KittyMinting {\n    /**\n     * @notice Returns all the relevant information about a specific kitty\n     * @param _kittyId the id of the kitty to get information from\n     */\n    function getKitty(uint256 _kittyId)\n        public\n        view\n        returns (\n            uint256 genes,\n            uint256 birthTime,\n            uint256 dadId,\n            uint256 momId,\n            uint256 generation\n        )\n    {\n        Kitty storage kitty = _kitties[_kittyId];\n\n        birthTime = uint256(kitty.birthTime);\n        dadId = uint256(kitty.dadId);\n        momId = uint256(kitty.momId);\n        generation = uint256(kitty.generation);\n        genes = kitty.genes;\n    }\n}\n",
  "sourcePath": "/home/diogo/workspace/pointnetwork6/pointnetwork/example/kitties.point/eth/contracts/KittyCore.sol",
  "ast": {
    "absolutePath": "project:/contracts/KittyCore.sol",
    "exportedSymbols": {
      "KittyCore": [
        569
      ]
    },
    "id": 570,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 510,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "project:/contracts/KittyMinting.sol",
        "file": "./KittyMinting.sol",
        "id": 511,
        "nodeType": "ImportDirective",
        "scope": 570,
        "sourceUnit": 614,
        "src": "25:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 512,
              "name": "KittyMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "732:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KittyMinting_$613",
                "typeString": "contract KittyMinting"
              }
            },
            "id": 513,
            "nodeType": "InheritanceSpecifier",
            "src": "732:12:2"
          }
        ],
        "contractDependencies": [
          218,
          508,
          613,
          1200,
          1595,
          1698,
          1826
        ],
        "contractKind": "contract",
        "documentation": "@title The KittyCore contract.\n@author Erno Wever\n@dev This contract is split in the following way:\n     - KittyBase: This is where we define the most fundamental code shared throughout the core\n            functionality. This includes our main data storage, constants and data types, plus\n            internal functions for managing these items.\n     - KittyOwnership: This provides the methods required for basic non-fungible token\n     - KittyBreeding: This file contains the methods necessary to breed cats together\n     - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.",
        "fullyImplemented": true,
        "id": 569,
        "linearizedBaseContracts": [
          569,
          613,
          508,
          1200,
          1698,
          1595,
          218,
          1826
        ],
        "name": "KittyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "1148:257:2",
              "statements": [
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "name": "kitty",
                      "nodeType": "VariableDeclaration",
                      "scope": 567,
                      "src": "1158:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Kitty_$55_storage_ptr",
                        "typeString": "struct KittyBase.Kitty"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 528,
                        "name": "Kitty",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 55,
                        "src": "1158:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$55_storage_ptr",
                          "typeString": "struct KittyBase.Kitty"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 533,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 530,
                      "name": "_kitties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1180:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Kitty_$55_storage_$dyn_storage",
                        "typeString": "struct KittyBase.Kitty storage ref[] storage ref"
                      }
                    },
                    "id": 532,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 531,
                      "name": "_kittyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "1189:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1180:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Kitty_$55_storage",
                      "typeString": "struct KittyBase.Kitty storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1158:40:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "birthTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "1209:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 536,
                            "name": "kitty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "1229:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$55_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48,
                          "src": "1229:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1221:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1221:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1209:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 541,
                      "name": "dadId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "1255:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "kitty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "1271:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$55_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dadId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "1271:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1263:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1263:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1255:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 548,
                      "name": "momId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "1293:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 550,
                            "name": "kitty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "1309:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$55_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "momId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "1309:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1301:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1301:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1293:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 555,
                      "name": "generation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "1331:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 557,
                            "name": "kitty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "1352:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$55_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "generation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54,
                          "src": "1352:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1344:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1344:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1331:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "genes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "1379:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 563,
                        "name": "kitty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "1387:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$55_storage_ptr",
                          "typeString": "struct KittyBase.Kitty storage pointer"
                        }
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "1387:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1379:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:19:2"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific kitty\n@param _kittyId the id of the kitty to get information from",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getKitty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "name": "_kittyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "927:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:18:2"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "name": "genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "1003:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "name": "birthTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "1030:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "name": "dadId",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "1061:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 524,
                  "name": "momId",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "1088:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "name": "generation",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "1115:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "989:154:2"
            },
            "scope": 569,
            "src": "909:496:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 570,
        "src": "710:697:2"
      }
    ],
    "src": "0:1408:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/KittyCore.sol",
      "exportedSymbols": {
        "KittyCore": [
          569
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 510,
        "name": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "attributes": {
          "SourceUnit": 614,
          "absolutePath": "project:/contracts/KittyMinting.sol",
          "file": "./KittyMinting.sol",
          "scope": 570,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 511,
        "name": "ImportDirective",
        "src": "25:28:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            218,
            508,
            613,
            1200,
            1595,
            1698,
            1826
          ],
          "contractKind": "contract",
          "documentation": "@title The KittyCore contract.\n@author Erno Wever\n@dev This contract is split in the following way:\n     - KittyBase: This is where we define the most fundamental code shared throughout the core\n            functionality. This includes our main data storage, constants and data types, plus\n            internal functions for managing these items.\n     - KittyOwnership: This provides the methods required for basic non-fungible token\n     - KittyBreeding: This file contains the methods necessary to breed cats together\n     - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            569,
            613,
            508,
            1200,
            1698,
            1595,
            218,
            1826
          ],
          "name": "KittyCore",
          "scope": 570
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "KittyMinting",
                  "referencedDeclaration": 613,
                  "type": "contract KittyMinting"
                },
                "id": 512,
                "name": "UserDefinedTypeName",
                "src": "732:12:2"
              }
            ],
            "id": 513,
            "name": "InheritanceSpecifier",
            "src": "732:12:2"
          },
          {
            "attributes": {
              "documentation": "@notice Returns all the relevant information about a specific kitty\n@param _kittyId the id of the kitty to get information from",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getKitty",
              "scope": 569,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_kittyId",
                      "scope": 568,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 514,
                        "name": "ElementaryTypeName",
                        "src": "927:7:2"
                      }
                    ],
                    "id": 515,
                    "name": "VariableDeclaration",
                    "src": "927:16:2"
                  }
                ],
                "id": 516,
                "name": "ParameterList",
                "src": "926:18:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "genes",
                      "scope": 568,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 517,
                        "name": "ElementaryTypeName",
                        "src": "1003:7:2"
                      }
                    ],
                    "id": 518,
                    "name": "VariableDeclaration",
                    "src": "1003:13:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "birthTime",
                      "scope": 568,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 519,
                        "name": "ElementaryTypeName",
                        "src": "1030:7:2"
                      }
                    ],
                    "id": 520,
                    "name": "VariableDeclaration",
                    "src": "1030:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "dadId",
                      "scope": 568,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 521,
                        "name": "ElementaryTypeName",
                        "src": "1061:7:2"
                      }
                    ],
                    "id": 522,
                    "name": "VariableDeclaration",
                    "src": "1061:13:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "momId",
                      "scope": 568,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 523,
                        "name": "ElementaryTypeName",
                        "src": "1088:7:2"
                      }
                    ],
                    "id": 524,
                    "name": "VariableDeclaration",
                    "src": "1088:13:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "generation",
                      "scope": 568,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 525,
                        "name": "ElementaryTypeName",
                        "src": "1115:7:2"
                      }
                    ],
                    "id": 526,
                    "name": "VariableDeclaration",
                    "src": "1115:18:2"
                  }
                ],
                "id": 527,
                "name": "ParameterList",
                "src": "989:154:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        529
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "kitty",
                          "scope": 567,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct KittyBase.Kitty",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Kitty",
                              "referencedDeclaration": 55,
                              "type": "struct KittyBase.Kitty"
                            },
                            "id": 528,
                            "name": "UserDefinedTypeName",
                            "src": "1158:5:2"
                          }
                        ],
                        "id": 529,
                        "name": "VariableDeclaration",
                        "src": "1158:19:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct KittyBase.Kitty storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 58,
                              "type": "struct KittyBase.Kitty storage ref[] storage ref",
                              "value": "_kitties"
                            },
                            "id": 530,
                            "name": "Identifier",
                            "src": "1180:8:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 515,
                              "type": "uint256",
                              "value": "_kittyId"
                            },
                            "id": 531,
                            "name": "Identifier",
                            "src": "1189:8:2"
                          }
                        ],
                        "id": 532,
                        "name": "IndexAccess",
                        "src": "1180:18:2"
                      }
                    ],
                    "id": 533,
                    "name": "VariableDeclarationStatement",
                    "src": "1158:40:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 520,
                              "type": "uint256",
                              "value": "birthTime"
                            },
                            "id": 534,
                            "name": "Identifier",
                            "src": "1209:9:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 535,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1221:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "birthTime",
                                  "referencedDeclaration": 48,
                                  "type": "uint64"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 529,
                                      "type": "struct KittyBase.Kitty storage pointer",
                                      "value": "kitty"
                                    },
                                    "id": 536,
                                    "name": "Identifier",
                                    "src": "1229:5:2"
                                  }
                                ],
                                "id": 537,
                                "name": "MemberAccess",
                                "src": "1229:15:2"
                              }
                            ],
                            "id": 538,
                            "name": "FunctionCall",
                            "src": "1221:24:2"
                          }
                        ],
                        "id": 539,
                        "name": "Assignment",
                        "src": "1209:36:2"
                      }
                    ],
                    "id": 540,
                    "name": "ExpressionStatement",
                    "src": "1209:36:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 522,
                              "type": "uint256",
                              "value": "dadId"
                            },
                            "id": 541,
                            "name": "Identifier",
                            "src": "1255:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 542,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1263:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "dadId",
                                  "referencedDeclaration": 52,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 529,
                                      "type": "struct KittyBase.Kitty storage pointer",
                                      "value": "kitty"
                                    },
                                    "id": 543,
                                    "name": "Identifier",
                                    "src": "1271:5:2"
                                  }
                                ],
                                "id": 544,
                                "name": "MemberAccess",
                                "src": "1271:11:2"
                              }
                            ],
                            "id": 545,
                            "name": "FunctionCall",
                            "src": "1263:20:2"
                          }
                        ],
                        "id": 546,
                        "name": "Assignment",
                        "src": "1255:28:2"
                      }
                    ],
                    "id": 547,
                    "name": "ExpressionStatement",
                    "src": "1255:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 524,
                              "type": "uint256",
                              "value": "momId"
                            },
                            "id": 548,
                            "name": "Identifier",
                            "src": "1293:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 549,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1301:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "momId",
                                  "referencedDeclaration": 50,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 529,
                                      "type": "struct KittyBase.Kitty storage pointer",
                                      "value": "kitty"
                                    },
                                    "id": 550,
                                    "name": "Identifier",
                                    "src": "1309:5:2"
                                  }
                                ],
                                "id": 551,
                                "name": "MemberAccess",
                                "src": "1309:11:2"
                              }
                            ],
                            "id": 552,
                            "name": "FunctionCall",
                            "src": "1301:20:2"
                          }
                        ],
                        "id": 553,
                        "name": "Assignment",
                        "src": "1293:28:2"
                      }
                    ],
                    "id": 554,
                    "name": "ExpressionStatement",
                    "src": "1293:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 526,
                              "type": "uint256",
                              "value": "generation"
                            },
                            "id": 555,
                            "name": "Identifier",
                            "src": "1331:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 556,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1344:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "generation",
                                  "referencedDeclaration": 54,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 529,
                                      "type": "struct KittyBase.Kitty storage pointer",
                                      "value": "kitty"
                                    },
                                    "id": 557,
                                    "name": "Identifier",
                                    "src": "1352:5:2"
                                  }
                                ],
                                "id": 558,
                                "name": "MemberAccess",
                                "src": "1352:16:2"
                              }
                            ],
                            "id": 559,
                            "name": "FunctionCall",
                            "src": "1344:25:2"
                          }
                        ],
                        "id": 560,
                        "name": "Assignment",
                        "src": "1331:38:2"
                      }
                    ],
                    "id": 561,
                    "name": "ExpressionStatement",
                    "src": "1331:38:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 518,
                              "type": "uint256",
                              "value": "genes"
                            },
                            "id": 562,
                            "name": "Identifier",
                            "src": "1379:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "genes",
                              "referencedDeclaration": 46,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 529,
                                  "type": "struct KittyBase.Kitty storage pointer",
                                  "value": "kitty"
                                },
                                "id": 563,
                                "name": "Identifier",
                                "src": "1387:5:2"
                              }
                            ],
                            "id": 564,
                            "name": "MemberAccess",
                            "src": "1387:11:2"
                          }
                        ],
                        "id": 565,
                        "name": "Assignment",
                        "src": "1379:19:2"
                      }
                    ],
                    "id": 566,
                    "name": "ExpressionStatement",
                    "src": "1379:19:2"
                  }
                ],
                "id": 567,
                "name": "Block",
                "src": "1148:257:2"
              }
            ],
            "id": 568,
            "name": "FunctionDefinition",
            "src": "909:496:2"
          }
        ],
        "id": 569,
        "name": "ContractDefinition",
        "src": "710:697:2"
      }
    ],
    "id": 570,
    "name": "SourceUnit",
    "src": "0:1408:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "256": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "kittyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "momId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dadId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "genes",
              "type": "uint256"
            }
          ],
          "name": "Birth",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1D96d04A5C52De34E6Df8A7B7F06FA0ea16e3D9F",
      "transactionHash": "0x1d44a0e4c2e544bcc23431c777b07b077509f369c5594414b9c8644c3207cfc0"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-04-05T17:37:22.803Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Erno Wever",
    "details": "This contract is split in the following way:     - KittyBase: This is where we define the most fundamental code shared throughout the core            functionality. This includes our main data storage, constants and data types, plus            internal functions for managing these items.     - KittyOwnership: This provides the methods required for basic non-fungible token     - KittyBreeding: This file contains the methods necessary to breed cats together     - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.",
    "methods": {
      "approve(address,uint256)": {
        "details": "[ERC721] The zero address indicates there is no approved address Requires - msg.sender is owner or approved opperator - cannot approve owner",
        "params": {
          "_kittyId": "The kitty id that is approved for",
          "_to": "The address."
        }
      },
      "balanceOf(address)": {
        "details": "[ERC721] Kitties assigned to the zero address are considered invalid, and this function throws for queries about the zero address",
        "params": {
          "_owner": "The address to check"
        },
        "return": "The address of the owner of the kitty"
      },
      "breed(uint256,uint256)": {
        "params": {
          "_dadId": "the id of the dad",
          "_momId": "the id of the mom"
        }
      },
      "createGen0Kitty(uint256)": {
        "details": "Can only be called by owner and when limit has not be reached",
        "return": "The id of the created kitty"
      },
      "getApproved(uint256)": {
        "details": "[ERC721] Get the approval address of the kitty Requires - _kittyId must exist",
        "params": {
          "_kittyId": "The kitty id"
        },
        "return": "The approved address for this kitty, or the zero address if there is none"
      },
      "getChildren(uint256)": {
        "params": {
          "_kittyId": "the id of the mom"
        },
        "return": "array of ids of the children"
      },
      "getKitty(uint256)": {
        "params": {
          "_kittyId": "the id of the kitty to get information from"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "[ERC721]",
        "params": {
          "_operator": "The operator",
          "_owner": "The owner"
        },
        "return": "True if `_operator` is an approved operator for `_owner`, false otherwise"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "[ERC721] Kitties assigned to the zero address are considered invalid, and this function throws for queries about the zero address",
        "return": "the address of the onwer of _kittyId"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "[ERC721] Transfer implementation with a check on caller if it can accept ERC721 Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator - when the caller is a smart contract, it should accept ERC721 tokens",
        "params": {
          "_from": "current owner of the kitty",
          "_kittyId": "uint256 id of the kitty to be transferred",
          "_to": "address to receive the ownership of the given kitty id"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "[ERC721] This works identically to the other function with an extra data parameter except this function just sets data to \"\"",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the kitty",
          "_kittyId": "The id of the kitty to be transferred",
          "_to": "address to receive the ownership of the given kitty id"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "[ERC721] Emits the ApprovalForAll event. Requires - cannot approve self",
        "params": {
          "_approved": "The approval status",
          "_operator": "The kitty id"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas.",
        "params": {
          "_interfaceId": "The interface identifier, as specified in ERC-165"
        },
        "return": "true if the contract implements _interfaceId and _interfaceId is not 0xffffffff, false otherwise"
      },
      "tokenByIndex(uint256)": {
        "details": "[ERC721Enumerable] Requires: - _index < totalSupply()",
        "params": {
          "_index": "A counter less than `totalSupply()`"
        },
        "return": "_index which is the same as the identifier"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.Be aware when calling this contract as its quite expensive because it loops through all kitties. Could potentially be optimized if we save all kitties also in an mapping of owners.",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokensOfOwner(address)": {
        "details": "[ERC721Enumerable] Requires - _index < balanceOf(_owner) - _owner is  non-zero addressBe aware when calling this contract as its quite expensive because it loops through all kitties",
        "params": {
          "_owner": "An address where we are interested in kitties owned by them"
        },
        "return": "The token identifier for the `_index`th kitty assigned to `_owner`,  (sort order not specified)"
      },
      "totalSupply()": {
        "details": "[ERC721Enumerable]",
        "return": "A count of valid kitties tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address"
      },
      "transfer(address,uint256)": {
        "params": {
          "_kittyId": "id of the kitty to be transferred",
          "_to": "address to receive the ownership of the given kitty id"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "[ERC721] Transfers the ownership of a given token id to another address Requires - valid token - valid, non-zero _to address (via _transfer) - not to this address to prevent potential misuse (via _transfer) - msg.sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the kitty",
          "_kittyId": "id of the kitty to be transferred",
          "_to": "address to receive the ownership of the given kitty id"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "The KittyCore contract."
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "Change or reaffirm the approved address for an kitty"
      },
      "balanceOf(address)": {
        "notice": "Count all Kitties assigned to an owner"
      },
      "breed(uint256,uint256)": {
        "notice": "Breed a new kitty based on a mom and dad"
      },
      "createGen0Kitty(uint256)": {
        "notice": "Creates a new gen0 kitty"
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single kitty"
      },
      "getChildren(uint256)": {
        "notice": "Get all the children of a kittyId"
      },
      "getKitty(uint256)": {
        "notice": "Returns all the relevant information about a specific kitty"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Query if an address is an authorized operator for another address"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an Kitty"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an Kitty from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an Kitty from one address to another address"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of `msg.sender`'s assets"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "tokenByIndex(uint256)": {
        "notice": "Enumerate valid kitties"
      },
      "tokensOfOwner(address)": {
        "notice": "Returns a list of all Kitty IDs assigned to an address."
      },
      "totalSupply()": {
        "notice": "Count kitties tracked by this contract"
      },
      "transfer(address,uint256)": {
        "notice": "Transfers the ownership of an own Kitty to another address"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer ownership of a Kitty -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING KITTIES OR ELSE THEY MAY BE PERMANENTLY LOST"
      }
    }
  }
}