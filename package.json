{
  "name": "pointnetwork",
  "version": "0.1.37",
  "description": "Point Network;",
  "main": "point",
  "engines": {
    "node": ">=14.0.0",
    "npm": ">=6.0.0"
  },
  "dependencies": {
    "@elastic/ecs-pino-format": "^1.3.0",
    "@openzeppelin/contracts": "^4.4.2",
    "@solana/web3.js": "^1.29.2",
    "@truffle/hdwallet-provider": "^1.5.0",
    "@types/node": "^17.0.18",
    "@types/proper-lockfile": "^4.1.2",
    "arweave": "^1.10.17",
    "arweave-mnemonic-keys": "^0.0.9",
    "async": "^3.2.1",
    "axios": "^0.21.2",
    "bip32": "^2.0.6",
    "bip39": "^3.0.4",
    "bootstrap": "^5.1.0",
    "bson": "^4.5.0",
    "commander": "^8.1.0",
    "config": "^3.3.7",
    "eccrypto": "^1.1.6",
    "ethereumjs-util": "^7.1.0",
    "ethereumjs-wallet": "^1.0.2",
    "fastify": "^3.20.2",
    "fastify-http-proxy": "^6.2.1",
    "fastify-websocket": "^3.2.1",
    "form-data": "^4.0.0",
    "formidable": "^1.2.2",
    "fs-extra": "^10.0.0",
    "graphql": "^16.2.0",
    "graphql-request": "^4.0.0",
    "html-entities": "^2.3.2",
    "js-yaml": "^4.1.0",
    "level": "^7.0.0",
    "lodash": "^4.17.21",
    "merge": "^2.1.1",
    "mime-types": "^2.1.32",
    "mkdirp": "^1.0.4",
    "next": "^12.1.0",
    "node-forge": "^1.0.0",
    "node-match-path": "^0.6.3",
    "pino": "^6.13.1",
    "pino-multi-stream": "6.0.0",
    "pino-pretty": "^7.5.1",
    "pino-udp": "^1.0.1",
    "proper-lockfile": "^4.1.2",
    "query-string": "^7.0.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "readline": "^1.3.0",
    "sanitize-html": "^2.4.0",
    "sequelize": "^6.6.5",
    "sequelize-auto-migrations": "github:scimonster/sequelize-auto-migrations#a063aa6535a3f580623581bf866cef2d609531ba",
    "solc0_8": "npm:solc@^0.8.6",
    "sqlite3": "^5.0.2",
    "twig": "^1.15.4",
    "typescript": "^4.5.5",
    "umzug": "^3.0.0",
    "uuid": "^8.3.2",
    "web3": "^1.5.2",
    "web3-provider-engine": "16.0.3",
    "web3-providers-http": "1.6.0",
    "websocket": "^1.0.34"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^5.12.0",
    "@typescript-eslint/parser": "^5.12.0",
    "eslint": "^8.9.0",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "jest": "^27.0.6",
    "nodemon": "^2.0.12",
    "sequelize-cli": "^6.2.0",
    "solhint": "^3.3.7",
    "ts-node": "^10.5.0"
  },
  "scripts": {
    "test": "jest",
    "test:db:docker": "printf '\\e[2J\\e[3J\\e[H' && npm run migration && NODE_ENV=development npm run test",
    "test:restart": "docker-compose -f docker-compose.test.yaml restart tests && docker logs -f pointnetwork_tests",
    "start": "node dist/index.js",
    "start:docker": "npm run compile && npm run migrate && npm run build && npm start",
    "start:docker:dev": "npm run compile && npm run migrate && npm run start:dev",
    "start:docker:e2e": "npm run migrate && npm run build && MODE=e2e npm start",
    "start:docker:zappdev": "npm run migrate && MODE=zappdev nodemon",
    "start:dev": "NODE_ENV=development nodemon",
    "build": "tsc",
    "postbuild": "npx copyfiles resources/certs/* config/*.yaml dist",
    "migrate": "./point migrate",
    "migration": "node ./scripts/migrate.js",
    "compile": "./point compile",
    "watch:site": "npx nodemon -w $SITE --config example/nodemon.json",
    "watch:sites": "ls -d example/*/ | xargs -I {} echo \"SITE={} npm run watch:site\" | sed \"s/.*/\\\\'&\\\\'/\" | xargs npx concurrently",
    "watch:sites:and:start": "npm run watch:sites -- 'npm run start' -n \"Pointnetwork,$(ls -d example/*/ | tr '\n' ',')\"",
    "watch:sites:and:start:dev": "npm run watch:sites -- 'npm run start:dev' -n \"Pointnetwork,$(ls -d example/*/ | tr '\n' ',')\"",
    "watch:site:and:start:docker:dev": "npx concurrently -n \"pointnetwork,$SITE\" 'npm run start:dev' 'npm run watch:site'",
    "build:deployer": "source .env.znet && docker build -t pointnetwork/pointnetwork_deployer:$DEPLOYER_IMAGE_VERSION -f deployer.Dockerfile .",
    "push:deployer": "source .env.znet && docker push pointnetwork/pointnetwork_deployer:$DEPLOYER_IMAGE_VERSION",
    "znet": "docker-compose -f docker-compose.znet.yaml --env-file .env.deployer",
    "devnet": "sudo docker-compose -f docker-compose.devnet.yaml --env-file .env.deployer.devnet",
    "znet:local": "docker-compose -f docker-compose.znet.local.yaml",
    "volume:backup": "docker run --rm -v $(pwd):/backup -v $VOLUME:/data ubuntu tar -czvf /backup/$VOLUME-$(date \"+%Y-%m-%dT%H:%M:%S\").tar.gz /data",
    "volume:restore": "docker run --rm -v $(pwd):/backup -v $VOLUME:/data ubuntu bash -c \"cd /data && tar -xvf /backup/$FILE --strip 1\"",
    "fix": "eslint --ext .js --fix src/ && eslint --ext .js --fix truffle/ && eslint --fix point",
    "lint": "eslint --ext .js src/ && eslint --ext .js truffle/ && eslint point",
    "lint:sol": "solhint 'example/**/contracts/*.sol' 'truffle/contracts/*.sol'"
  },
  "jest": {
    "verbose": true,
    "moduleNameMapper": {
      "#(.*)": "<rootDir>/core/$1"
    }
  },
  "nodemonConfig": {
    "ignore": [
      "example/*"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pointnetwork/pointnetwork.git"
  },
  "author": "Point Network",
  "license": "MIT"
}
