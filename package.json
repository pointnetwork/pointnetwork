{
  "name": "pointnetwork",
  "version": "1.0.6",
  "description": "Point Network;",
  "main": "point",
  "dependencies": {
    "@openzeppelin/contracts": "^4.3.0",
    "@pointnetwork/kadence": "^6.1.20",
    "@truffle/contract": "^4.3.30",
    "arweave": "^1.10.16",
    "async": "^3.2.1",
    "axios": "^0.21.1",
    "bootstrap": "^5.1.0",
    "bson": "^4.5.0",
    "buffer-chunks": "^0.1.1",
    "commander": "^8.1.0",
    "eccrypto": "^1.1.6",
    "ethereumjs-util": "^7.1.0",
    "fastify": "^3.20.2",
    "fastify-nextjs": "^6.0.0",
    "fastify-websocket": "^3.2.1",
    "fs-extra": "^10.0.0",
    "graphql-request": "^3.5.0",
    "html-entities": "^2.3.2",
    "http2-proxy": "^5.0.53",
    "level": "^7.0.0",
    "lodash": "^4.17.21",
    "merge": "^2.1.1",
    "merkle-lib": "^2.0.10",
    "mime-types": "^2.1.32",
    "mkdirp": "^1.0.4",
    "next": "^11.1.1",
    "node-forge": "^0.10.0",
    "node-match-path": "^0.6.3",
    "npid": "^0.4.0",
    "pg": "^8.7.1",
    "pino": "^6.13.1",
    "pino-multi-stream": "^5.3.0",
    "pino-pretty": "^6.0.0",
    "query-string": "^7.0.1",
    "randombytes": "^2.1.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "readline": "^1.3.0",
    "sanitize-html": "^2.4.0",
    "sequelize": "^6.6.5",
    "sequelize-auto-migrations": "github:scimonster/sequelize-auto-migrations#a063aa6535a3f580623581bf866cef2d609531ba",
    "socket.io": "^4.1.3",
    "solc0_5": "npm:solc@^0.8",
    "solc0_6": "npm:solc@^0.8",
    "solc0_7": "npm:solc@^0.8",
    "solc0_8": "npm:solc@^0.8.6",
    "twig": "^1.15.4",
    "uuid": "^8.3.2",
    "web3": "^1.5.2",
    "websocket": "^1.0.34",
    "xstate": "^4.23.1"
  },
  "devDependencies": {
    "@babel/core": "^7.15.5",
    "@babel/eslint-parser": "^7.15.4",
    "@babel/preset-env": "^7.15.4",
    "eslint": "^7.32.0",
    "jest": "^27.0.6",
    "nodemon": "^2.0.12",
    "sequelize-cli": "^6.2.0"
  },
  "scripts": {
    "test": "jest",
    "test:db:docker": "printf '\\e[2J\\e[3J\\e[H' && npm run migrate && NODE_ENV=development npm run test",
    "test:restart": "docker-compose -f docker-compose.test.yaml restart tests && docker logs -f pointnetwork_tests",
    "start": "./point --datadir $DATADIR -v",
    "start:dev": "npx nodemon ./point -- --datadir $DATADIR -v",
    "start:docker": "./scripts/await-contracts-docker.js && npm run migrate && npm start",
    "start:docker:dev": "./scripts/await-contracts-docker.js && npm run migrate && npm run start:dev",
    "migrate": "./point migrate --datadir $DATADIR",
    "watch:site": "npx nodemon -w $SITE --config example/nodemon.json",
    "watch:sites": "ls -d example/*/ | xargs -I {} echo \"SITE={} npm run watch:site\" | sed \"s/.*/\\\\'&\\\\'/\" | xargs npx concurrently",
    "watch:sites:and:start": "npm run watch:sites -- 'npm run start' -n \"Pointnetwork,$(ls -d example/*/ | tr '\n' ',')\"",
    "watch:sites:and:start:dev": "npm run watch:sites -- 'npm run start:dev' -n \"Pointnetwork,$(ls -d example/*/ | tr '\n' ',')\"",
    "watch:sites:and:start:docker": "./scripts/await-contracts-docker.js && npm run watch:sites:and:start",
    "watch:sites:and:start:docker:dev": "./scripts/await-contracts-docker.js && npm run watch:sites:and:start:dev",
    "watch:site:and:start:docker:dev": "./scripts/await-contracts-docker.js && npx concurrently -n \"pointnetwork,$SITE\" 'npm run start:dev' 'npm run watch:site'"
  },
  "imports": {
    "#utils": "./core/utils.js"
  },
  "jest": {
    "verbose": true,
    "moduleNameMapper": {
      "#(.*)": "<rootDir>/core/$1"
    }
  },
  "nodemonConfig": {
    "ignore": [
      "example/*"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pointnetwork/pointnetwork.git"
  },
  "author": "Point Network",
  "license": "MIT"
}
